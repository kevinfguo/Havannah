var gameLogic;!function(a){function b(a){for(var b=0;b<this.length;b++)if(this[b]==a)return!0;return!1}function c(a){var b,c;for(b=0;15>b;++b)for(c=s[b][0];c<s[b][1];++c)if(""===a[b][c])return!1;return!0}function d(a,b,d,g){if(void 0===a&&(a=f()),""!==a[b][d])throw new Error("One can only make a move in an empty position!");var h=angular.copy(a);h[b][d]=0===g?"R":"B";var i,j=e(h,b,d,g);return i=""!==j||c(h)?{endMatch:{endMatchScores:"R"===j?[1,0]:"B"===j?[0,1]:[0,0]}}:{setTurn:{turnIndex:1-g}},[i,{set:{key:"board",value:h}},{set:{key:"delta",value:{row:b,col:d}}}]}function e(a,b,c){if(1==h(a,b,c)||1==i(a,b,c)||1==j(a,b,c)){if("B"==a[b][c])return"B";if("R"==a[b][c])return"R"}return""}function f(){var a,b,c=new Array(14);for(a=0;15>a;++a)for(c[a]=new Array(14),b=s[a][0];b<s[a][1];++b)c[a][b]="";return c}function g(a){var b=a.move,c=a.turnIndexBeforeMove,e=a.stateBeforeMove;try{var f=b[2].set.value,g=f.row,h=f.col,i=e.board,j=d(i,g,h,c);if(console.log(j),!q(g,h))return!1;if(!angular.equals(b,j))return console.log(j,"move not equal to exp move"),!1}catch(k){return console.log("exception"),!1}return!0}function h(a,b,c){var d=n(a,b,c),e=0;for(var f in d)for(var g=f.split(","),h=0;7>h;h++)angular.equals(g,z[h])&&e++;return e>1?!0:!1}function i(a,b,c){var d=n(a,b,c),e=0,f=0,g=0,h=0,i=0,j=0,k=0;for(var l in d)for(var m=l.split(","),o=0;6>o;o++)angular.equals(m,t[o])&&(e=1),angular.equals(m,u[o])&&(f=1),angular.equals(m,v[o])&&(g=1),angular.equals(m,w[o])&&(h=1),angular.equals(m,x[o])&&(i=1),angular.equals(m,y[o])&&(j=1);return k=e+f+g+h+i+j,3==k?!0:!1}function j(a,b,c){console.log(a);var d=a[b][c],e=o(a,b,c),f=0;if(e.length>1&&2==e.length)for(var g in o(a,e[0][0],e[0][1]))if(g[0]==e[1][0]&&g[1]==e[1][1]){f=1;break}if(1==f)return!1;e=p(a,b,c,d);console.log(e);for(var g=0;g<e.length;g++){var h=angular.copy(a);h[b][c]="Z";var i;f=0;var j=[];for(j.push(e[g]);0!=j.length;){i=j.pop(),h[i[0]][i[1]]="Z";for(var k=0;6>k;k++){if(i[0]==t[k][0]&&i[1]==t[k][1]){f=1;break}if(i[0]==u[k][0]&&i[1]==u[k][1]){f=1;break}if(i[0]==v[k][0]&&i[1]==v[k][1]){f=1;break}if(i[0]==w[k][0]&&i[1]==w[k][1]){f=1;break}if(i[0]==x[k][0]&&i[1]==x[k][1]){f=1;break}if(i[0]==y[k][0]&&i[1]==y[k][1]){f=1;break}if(i[0]==z[k][0]&&i[1]==z[k][1]){f=1;break}}j=j.concat(p(h,i[0],i[1],d))}if(0==f)return console.log("trueee"),!0}return console.log("reached here"),!1}function k(a,b,c,d){for(var e in d)if(e[0]==b&&e[1]==c)return!1;return!0}function l(a,b,c){var d=m(a,b,c),e=n(a,b,c),f=[],g=0;for(var h in d)f[h]=0;for(var h in d){var i=0,j=d[h],k=o(a,j[0],j[1]);for(var l in k)k[l]in e==!0&&(i++,2==i&&(f[h]=1))}for(var h in f){if(0===f[h])return!1;if(1===f[h]){var p=0,j=d[h],k=o(a,j[0],j[1]);for(l in k)if(p++,p==d.length-1)return!1}}var d=n(a,b,c),k=o(a,b,c),g=0,i=0;for(var h in d)g++;if(g>5)for(var h in d){var q,r=0;for(l in k)if(angular.equals(d[h],k[l])){var s=k[l],t=o(a,s[0],s[1]);for(var u in t)angular.equals(t[u],q)&&r++;q=k[l]}if(r>k.length-2)return!1}return!0}function m(a,b,c){var d=[];d.push([b,c]);var e=[],f=[b,c];e[f]=[-1,-1];var g=[],h=[];for(h.push([b,c]);d.length>0;){var i=d.shift(),j=o(a,i[0],i[1]);for(var k in j)j[k]in e==!1&&(g[j[k]]=1,d.push(j[k]),e[j[k]]=i,h.push(j[k]))}return h}function n(a,b,c){var d=[];d.push([b,c]);var e=[],f=[b,c];for(e[f]=[[b],[c]];d.length>0;){var g=d.shift(),h=o(a,g[0],g[1]);for(var i in h)h[i]in e==0&&(d.push(h[i]),e[h[i]]=h[i])}return e}function o(a,b,c){var d=[];return q(b-1,c)&&""!=a[b-1][c]&&a[b-1][c]===a[b][c]&&d.push([b-1,c]),q(b-1,c-1)&&""!=a[b-1][c-1]&&a[b-1][c-1]===a[b][c]&&d.push([b-1,c-1]),q(b,c-1)&&""!=a[b][c-1]&&a[b][c-1]==a[b][c]&&d.push([b,c-1]),q(b,c+1)&&""!=a[b][c+1]&&a[b][c+1]==a[b][c]&&d.push([b,c+1]),q(b+1,c+1)&&""!=a[b+1][c+1]&&a[b+1][c+1]==a[b][c]&&d.push([b+1,c+1]),q(b+1,c)&&""!=a[b+1][c]&&a[b+1][c]==a[b][c]&&d.push([b+1,c]),d}function p(a,b,c,d){var e=[];return q(b-1,c)&&"Z"!=a[b-1][c]&&a[b-1][c]!=d&&e.push([b-1,c]),q(b-1,c-1)&&"Z"!=a[b-1][c-1]&&a[b-1][c-1]!=d&&e.push([b-1,c-1]),q(b,c-1)&&"Z"!=a[b][c-1]&&a[b][c-1]!=d&&e.push([b,c-1]),q(b,c+1)&&"Z"!=a[b][c+1]&&a[b][c+1]!=d&&e.push([b,c+1]),q(b+1,c+1)&&"Z"!=a[b+1][c+1]&&a[b+1][c+1]!=d&&e.push([b+1,c+1]),q(b+1,c)&&"Z"!=a[b+1][c]&&a[b+1][c]!=d&&e.push([b+1,c]),e}function q(a,b){return a>-1&&15>a&&b>-1&&15>b&&b>s[a][0]-1&&b<s[a][1]?!0:!1}function r(a,b){var c,e,f=null,g=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],h=function(a){for(var b,c,d=a.length;d;)c=Math.floor(Math.random()*d--),b=a[d],a[d]=a[c],a[c]=b;return a};for(g=h(g),c=14;c>-1;--c)for(e=s[c][0];e<s[c][1];++e)try{var i=Math.floor(Math.random()*(s[c][1]-s[c][0])+s[c][0]);return f=d(a,g[c],i,b)}catch(j){}return f}a.contains=b;var s=[[0,8],[0,9],[0,10],[0,11],[0,12],[0,13],[0,14],[0,15],[1,15],[2,15],[3,15],[4,15],[5,15],[6,15],[7,15]],t=[["0","1"],["0","2"],["0","3"],["0","4"],["0","5"],["0","6"]],u=[["1","8"],["2","9"],["3","10"],["4","11"],["5","12"],["6","13"]],v=[["8","14"],["9","14"],["10","14"],["11","14"],["12","14"],["13","14"]],w=[["14","8"],["14","9"],["14","10"],["14","11"],["14","12"],["14","13"]],x=[["8","1"],["9","2"],["10","3"],["11","4"],["12","5"],["13","6"]],y=[["1","0"],["2","0"],["3","0"],["4","0"],["5","0"],["6","0"]],z=[["0","0"],["0","7"],["7","14"],["14","14"],["14","7"],["7","0"]];a.isTie=c,a.createMove=d,a.getWinner=e,a.setBoard=f,a.isMoveOk=g,a.getBridgeWin=h,a.getForkWin=i,a.getRingWin2=j,a.notInSet=k,a.getRingWin=l,a.getConnectedPathForRing=m,a.getConnectedPath=n,a.getNeighborsWithSameColor=o,a.isInsideBoard=q,a.getPossibleMoves=r}(gameLogic||(gameLogic={}));var game;!function(a){"use strict";function b(){console.log("Translation of 'RULES_OF_HAVANNAH' is "+translate("RULES_OF_HAVANNAH")),resizeGameAreaService.setWidthToHeight(1),gameService.setGame({minNumberOfPlayers:2,maxNumberOfPlayers:2,isMoveOk:gameLogic.isMoveOk,updateUI:k}),dragAndDropService.addDragListener("gameArea",e)}function c(a,b){for(var c=[],d=a;b>d;d++)c[d]=d;return c}function d(a,b){var c=s[a][b];return"R"===c?{"-webkit-animation":"moveAnimation 2s",animation:"moveAnimation 2s"}:"B"===c?{"-webkit-animation":"moveAnimation 2s",animation:"moveAnimation 2s"}:{}}function e(a,b,c){var d=document.getElementById("draggingLines"),e=document.getElementById("horizontalDraggingLine"),g=document.getElementById("verticalDraggingLine");if(A=document.getElementById("gameArea"),y=15,z=15,w=b-A.offsetLeft,x=c-A.offsetTop,console.log(w,x,b,c,A.clientWidth,A.clientHeight),0>w||0>x||w>=A.clientWidth||x>=A.clientHeight)return void(d.style.display="none");var j=[[0,8],[0,9],[0,10],[0,11],[0,12],[0,13],[0,14],[0,15],[1,15],[2,15],[3,15],[4,15],[5,15],[6,15],[7,15]];d.style.display="inline";var k=Math.floor(y*x/A.clientHeight),l=Math.floor(z*w/A.clientWidth),n=f(k,l),o=i(k,l);console.log(o,k,l),g.setAttribute("x1",String(o.x)),g.setAttribute("x2",String(o.x)),e.setAttribute("y1",String(o.y)),e.setAttribute("y2",String(o.y));var p=(h(k,l),"rotate(27.5 "+Math.floor(o.x)+" "+Math.floor(o.y)+")");g.setAttribute("transform",p);h(k,l);k>-1&&15>k&&(n>j[k][0]-1&&n<j[k][1]||(d.style.display="none")),("touchend"===a||"touchcancel"===a||"touchleave"===a||"mouseup"===a)&&(d.style.display="none",m(k,n))}function f(a,b){var c;return(0==a||1==a)&&(c=b-3),(2==a||3==a)&&(c=b-2),(4==a||5==a)&&(c=b-1),(6==a||7==a)&&(c=b),(8==a||9==a)&&(c=b+1),(10==a||11==a)&&(c=b+2),(12==a||13==a)&&(c=b+3),14==a&&(c=b+4),c}function g(){return{width:y%2==0?A.clientWidth/z-z*w/2:A.clientWidth/z,height:y%2==0?A.clientHeight/y-y*x/2:A.clientHeight/y}}function h(a,b){var c=g();return{top:a*c.height,left:b*c.width}}function i(a,b){var c=g();console.log("height=",c.height,"width=",c.width);var d;return d=a%2===1?b*c.width+c.width/2:b*c.width+c.width,console.log(d,a*c.height+c.height/2),{x:d,y:a*c.height+c.height/2}}function j(){for(var a=gameLogic.getPossibleMoves(s,u);null==a;)a=gameLogic.getPossibleMoves(s,u);gameService.makeMove(a)}function k(a){s=a.stateAfterMove.board;a.move;void 0===s&&(s=gameLogic.setBoard()),t=a.turnIndexAfterMove>=0&&a.yourPlayerIndex===a.turnIndexAfterMove,u=a.turnIndexAfterMove,t&&""===a.playersInfo[a.yourPlayerIndex].playerId&&(console.log("computer turn"),t=!1,$timeout(j,500))}function l(a,b){if(log.info(["Clicked on cell:",a,b]),"?throwException"===window.location.search)throw new Error("Throwing the error because URL has '?throwException'");if(t)try{var c=gameLogic.createMove(s,a,b,u);t=!1,gameService.makeMove(c)}catch(d){return void log.info(["Cell is already full in position:",a,b,d])}}function m(a,b){$rootScope.$apply(function(){var c="Dragged to "+a+"x"+b;log.info(c),c=c,l(a,b)})}function n(a,b){var c=s[a][b];return""!==c}function o(a,b){return"R"===s[a][b]}function p(a,b){return"B"===s[a][b]}function q(a,b){var c=s[a][b];return"R"===c?"imgs/P.png":"B"===c?"imgs/B.png":""}function r(a,b){return void 0!==v&&v.row===a&&v.col===b}var s,t,u,v,w,x,y,z,A;a.init=b,a.numbersTo=c,a.getStyle=d,a.cellClicked=l,a.shouldShowImage=n,a.isPieceR=o,a.isPieceB=p,a.getImageSrc=q,a.shouldSlowlyAppear=r}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap","gameServices"]).run(function(){$rootScope.game=game,translate.setLanguage("en",{RULES_OF_HAVANNAH:"Rules of Havannah",RULES_SLIDE1:"Each player places one stone of their color on the board per turn.",RULES_SLIDE2:"A player wins when they complete one of three different structures from unbroken lines, or paths, of connected stones, all of their colour:",RULES_SLIDE3:"A ring is a loop around one or more cells (no matter whether the encircled cells are occupied by any player or empty",RULES_SLIDE4:"A bridge, which connects any two of the six corner cells of the board; or",RULES_SLIDE5:"A fork, which connects any three edges of the board; corner points are not considered parts of an edge.",CLOSE:"Close"}),game.init()});var aiService;!function(a){function b(a,b,f){return alphaBetaService.alphaBetaDecision([null,{set:{key:"board",value:a}}],b,d,c,"?debug"===window.location.search?e:null,f)}function c(a){if(a[0].endMatch){var b=a[0].endMatch.endMatchScores;return b[0]>b[1]?Number.POSITIVE_INFINITY:b[0]<b[1]?Number.NEGATIVE_INFINITY:0}return 0}function d(a,b){return gameLogic.getPossibleMoves(a[1].set.value,b)}function e(a){return"\n"+a[1].set.value.join("\n")+"\n"}a.createComputerMove=b,a.getStateScoreForIndex0=c,a.getNextStates=d,a.getDebugStateToString=e}(aiService||(aiService={}));
//# sourceMappingURL=everything.min.js.map